# -*- coding: utf-8 -*-
"""CIFAR10_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TP7K8CrZ_J6wvlNW1QCCExvDVWfgNN2s
"""

import tensorflow as tf
import numpy as np

cifar10_ = tf.keras.datasets.cifar10

(x_train , y_train) , (x_test , y_test) = cifar10_.load_data()

(x_train.shape , y_train.shape) , (x_test.shape , y_test.shape)

x_train[0]

y_train

min(y_train) , max(y_train)

class_names = ['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']

import matplotlib.pyplot as plt

plt.figure(figsize=(10,5))
for i in range(24):
  plt.subplot(3,8,i+1) 
  plt.xticks([])
  plt.yticks([])
  plt.imshow(x_train[i])
  plt.xlabel(class_names[int(y_train[i])])

x_train = x_train.astype('float32')
x_test = x_test.astype('float32')

x_train/=255.
x_test/=255.

y_train = tf.keras.utils.to_categorical(y_train)
y_test = tf.keras.utils.to_categorical(y_test)

y_train[0]

datagen = tf.keras.preprocessing.image.ImageDataGenerator(
    rotation_range=15,
    width_shift_range=0.1,
    height_shift_range=0.1,
    horizontal_flip=True,
    )

datgen = datagen.flow(x_train, y_train, batch_size=128)

model_ = tf.keras.applications.vgg16.VGG16(include_top=False,weights='imagenet',input_shape=(32,32,3),classes=10)

model_.summary()

model = tf.keras.Sequential()
model.add(model_)

model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128,activation='relu'))
model.add(tf.keras.layers.Dense(10,activation='softmax'))

model.compile(
    optimizer='adam',
    loss=tf.keras.losses.CategoricalCrossentropy(from_logits=True), 
    metrics=['accuracy']
)

model.fit_generator(datgen, validation_data=(x_test, y_test), epochs=50)





"""**We achieved validation accuracy of 87% (using vgg16 model) which can be further improved to more than 90% using more epochs**"""



